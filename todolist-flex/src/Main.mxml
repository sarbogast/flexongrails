<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   xmlns:services="services.*"
			   minWidth="955" minHeight="600"
			   currentState="{channelSet != null ? (channelSet.authenticated ? 'loggedIn' : 'loggedOut') : 'loggedOut'}"
			   preinitialize="preinitializeHandler(event)"
			   applicationComplete="applicationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.messaging.ChannelSet;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import org.springextensions.actionscript.context.support.XMLApplicationContext;
			
			private var taskForm:TaskForm;
			
			[Bindable]
			private var loggedInUser:String;
			
			[Bindable]
			private var channelSet:ChannelSet;
			
			private var contextURL:String;
			
			private function reloadTasks():void {
				getAllTasksResult.token = todoListService.getAllTasks();
			}

			protected function createTaskButton_clickHandler(event:MouseEvent):void {
				taskForm = new TaskForm();
				taskForm.addEventListener("taskSaved", taskSaved);
				taskForm.addEventListener("taskCancelled", taskCancelled);
				PopUpManager.addPopUp(taskForm, this, true);
				PopUpManager.centerPopUp(taskForm);
			}
			
			private function taskSaved(event:Event):void{
				createTaskResult.token = todoListService.createNewTask(taskForm.task);
			}
			
			private function taskCancelled(event:Event):void {
				PopUpManager.removePopUp(taskForm);
				taskForm = null;
			}

			protected function createTaskResult_resultHandler(event:ResultEvent):void {
				PopUpManager.removePopUp(taskForm);
				taskForm = null;
				reloadTasks();
			}

			protected function loginButton_clickHandler(event:MouseEvent):void
			{
				if(channelSet == null){
					Alert.show("You are not connected to the server so you can't log in");
				} else {
					loginResult.token = channelSet.login(usernameInput.text, passwordInput.text);
				}
			}

			protected function logoutButton_clickHandler(event:MouseEvent):void
			{
				if(channelSet == null){
					Alert.show("You are not connected to the server so you can't log out");
				} else {
					logoutResult.token = channelSet.logout();
				}
			}

			protected function loginResult_resultHandler(event:ResultEvent):void
			{
				loggedInUser = event.result.name;
				usernameInput.text = "";
				passwordInput.text = "";
			}

			protected function logoutResult_resultHandler(event:ResultEvent):void
			{
				loggedInUser = "";
			}

			protected function preinitializeHandler(event:FlexEvent):void
			{
				contextURL = parameters['ContextURL'];
			}


			protected function applicationCompleteHandler(event:FlexEvent):void
			{
				var applicationContext:XMLApplicationContext = new XMLApplicationContext();
				applicationContext.addConfigLocation(contextURL);
				applicationContext.addEventListener(Event.COMPLETE, contextLoadedHandler);
				applicationContext.load();
			}
			
			protected function contextLoadedHandler(event:Event):void{
				channelSet = (event.target as XMLApplicationContext).getObject("channelSet");
				reloadTasks();
			}


			protected function getAllTasksResult_faultHandler(event:FaultEvent):void
			{
				Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)
			}

		]]>
	</fx:Script>
	<s:states>
		<s:State name="loggedOut"/>
		<s:State name="loggedIn"/>
	</s:states>
	<fx:Declarations>
		<s:CallResponder id="getAllTasksResult" fault="getAllTasksResult_faultHandler(event)"/>
		<s:CallResponder id="createTaskResult" 
						 result="createTaskResult_resultHandler(event)"/>
		<s:CallResponder id="loginResult" result="loginResult_resultHandler(event)" 
						 fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"/>
		<s:CallResponder id="logoutResult" result="logoutResult_resultHandler(event)" 
						 fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"/>
		<services:TodoListService id="todoListService" 
			fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)" 
			showBusyCursor="true" channelSet="{channelSet}">
		</services:TodoListService>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:Panel width="100%" height="100%" title="Todo List">
		<s:List width="100%" height="100%" id="list" labelField="title">
			<s:AsyncListView list="{getAllTasksResult.lastResult}"/>
		</s:List>
		<s:controlBarContent>
			<s:Button id="createTaskButton" label="+" 
					  fontWeight="bold" fontSize="20"
					  click="createTaskButton_clickHandler(event)"/>
			<s:HGroup width="100%" horizontalAlign="right" includeIn="loggedOut">
				<s:Label text="User name: "/>
				<s:TextInput id="usernameInput"/>
				<s:Label text="Password: "/>
				<s:TextInput id="passwordInput" displayAsPassword="true"/>
				<s:Button id="loginButton" label="Login" click="loginButton_clickHandler(event)"/>
			</s:HGroup>
			<s:HGroup width="100%" horizontalAlign="right" includeIn="loggedIn">
				<s:Label text="Logged in as {loggedInUser}"/>
				<s:Button id="logoutButton" label="Logout" click="logoutButton_clickHandler(event)"/>
			</s:HGroup>
		</s:controlBarContent>
	</s:Panel>
</s:Application>
